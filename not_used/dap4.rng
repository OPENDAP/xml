<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns="http://relaxng.org/ns/structure/1.0"
    xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
    datatypeLibrary="http://xml.opendap.org/datatypes/dap4">
    
    <start>
        <ref name="group"/>
    </start>
    
    <define name="group">
        <element name="Group">
            <a:documentation>
                Semantic restriction: attributes are allowed
                only on the root group.
            </a:documentation>
            <optional>
                <attribute name="dapVersion"><data type="dap4_string"/></attribute>
            </optional>
            <optional>
                <attribute name="ns"><data type="dap4_uri"/></attribute>
            </optional>
            <optional>
                <attribute name="base" ns="http://www.w3.org/XML/1998/namespace">
                    <data type="dap4_uri"/>
                </attribute>
            </optional>
            <ref name="groupdef"/>
        </element>
    </define>
    
    <define name="groupdef">
        <attribute name="name"><data type="dap4_id"/></attribute>
        <zeroOrMore>
            <choice>
                <ref name="enumdef"/>
                <ref name="dimdef"/>
                <ref name="variable"/>
                <ref name="metadata"/>
                <ref name="group"/>
            </choice>
        </zeroOrMore>
    </define>
    
    <define name="enumdef">
        <element name="Enumeration">
            <attribute name="name"><data type="dap4_id"/></attribute>
            <attribute name="basetype">
                <choice> <!-- Must be consistent with atomictype and variable -->
                    <value>Byte</value>
                    <value>UByte</value>
                    <value>Int8</value>
                    <value>UInt8</value>
                    <value>Int16</value>
                    <value>UInt16</value>
                    <value>Int32</value>
                    <value>UInt32</value>
                    <value>Int64</value>
                    <value>UInt64</value>
                </choice>
            </attribute>
            <oneOrMore><ref name="enumconst"/></oneOrMore>
        </element>
    </define>
    
    <define name="enumconst">
        <element name="Element">
            <attribute name="name"><data type="dap4_id"/></attribute>
            <attribute name="value"><data type="dap4_integer"/></attribute>
        </element>
    </define>
    
    <define name="namespace">
        <zeroOrMore>
            <element name="Namespace">
                <attribute name="href"><data type="dap4_uri"/></attribute>
            </element>
        </zeroOrMore>
    </define>
    
    <define name="dimdef">
        <element name="Dimension">
            <attribute name="name"><data type="dap4_id"/></attribute>
            <attribute name="size">
                <data type="dap4_integer"/>
            </attribute>
            <ref name="metadata"/>
        </element>
    </define>
    
    <define name="dimref">
        <element name="Dim">
            <optional>
                <attribute name="name"><data type="dap4_fqn"/></attribute>
            </optional>
            <optional>
                <attribute name="size">
                    <choice>
                        <data type="dap4_integer"/>
                        <data type="dap4_vdim"/>
                    </choice>
                </attribute>
            </optional>
        </element>
    </define>
    
    <define name="dimset">
        <oneOrMore><ref name="dimref"/></oneOrMore>
    </define>
    
    <define name="atomictype">
        <!-- This must be consistent with "variable" below -->
        <choice>
            <value>Char</value>
            <value>Byte</value>
            <value>UByte</value>
            <value>Int8</value>
            <value>UInt8</value>
            <value>Int16</value>
            <value>UInt16</value>
            <value>Int32</value>
            <value>UInt32</value>
            <value>Int64</value>
            <value>UInt64</value>
            <value>Float32</value>
            <value>Float64</value>
            <value>String</value>
            <value>Enumeration</value>
            <value>Opaque</value>
        </choice>
    </define>
    
    <define name="enumref">
        <attribute name="name"><data type="dap4_fqn"/></attribute>
        <attribute name="value"><data type="dap4_id"/></attribute>
    </define>
    
    <define name="variable">
        <choice>
            <ref name="simplevariable"/>
            <ref name="structurevariable"/>
        </choice>
    </define>
    
    <define name="simplevariable">
        <choice>
            <!-- Following  must be consistent with "atomictype" -->
            <element name="Char"   ><ref name="variabledef"/></element>
            <element name="Byte"   ><ref name="variabledef"/></element>
            <element name="UByte"  ><ref name="variabledef"/></element>
            <element name="Int8"   ><ref name="variabledef"/></element>
            <element name="Uint8"  ><ref name="variabledef"/></element>
            <element name="Int16"  ><ref name="variabledef"/></element>
            <element name="UInt16" ><ref name="variabledef"/></element>
            <element name="Int32"  ><ref name="variabledef"/></element>
            <element name="UInt32" ><ref name="variabledef"/></element>
            <element name="Int64"  ><ref name="variabledef"/></element>
            <element name="UInt64" ><ref name="variabledef"/></element>
            <element name="Float32"><ref name="variabledef"/></element>
            <element name="Float64"><ref name="variabledef"/></element>
            <element name="string" ><ref name="variabledef"/></element>
            <element name="Opaque"><ref name="variabledef"/></element>
            <element name="Enum">
                <attribute name="enum"><data type="dap4_fqn"/></attribute>
                <ref name="variabledef"/>
            </element>
        </choice>
    </define>
    
    <define name="variabledef">
        <attribute name="name"><data type="dap4_id"/></attribute>
        <zeroOrMore>
            <choice>
                <ref name="dimset"/>
                <ref name="mapvars"/>
                <ref name="metadata"/>
            </choice>
        </zeroOrMore>
    </define>
    
    <define name="mapvars">
        <zeroOrMore>
            <ref name="mapref"/>
        </zeroOrMore>
    </define>
    <define name="mapref">
        <element name="Map">
            <attribute name="name"><data type="dap4_fqn"/></attribute>
        </element>
    </define>
    
    <define name="structurevariable">
        <element name="Structure">
            <attribute name="name"><data type="dap4_id"/></attribute>
            <zeroOrMore>
                <choice>
                    <ref name="dimset"/>
                    <ref name="variable"/>
                    <ref name="metadata"/>
                </choice>
            </zeroOrMore>
        </element>
    </define>
    
    <define name="metadata">
        <zeroOrMore>
            <choice>
                <!--    <ref name="otherxml"/> -->
                <ref name="attribute"/>
            </choice>
        </zeroOrMore>
    </define>
    
    <define name="attribute">
        <element name="Attribute">
            <attribute name="name"><data type="dap4_id"/></attribute>
            <a:documentation>
                Semantic constraint: type must be compatible
                with the set of attribute values
            </a:documentation>
            <attribute name="type">
                <choice>
                    <value>Char</value>
                    <value>Byte</value>
                    <value>UByte</value>
                    <value>Int8</value>
                    <value>UInt8</value>
                    <value>Int16</value>
                    <value>UInt16</value>
                    <value>Int32</value>
                    <value>UInt32</value>
                    <value>Int64</value>
                    <value>UInt64</value>
                    <value>Float32</value>
                    <value>Float64</value>
                    <value>String</value>
                    <value>Enumeration</value>
                    <value>Opaque</value>
                </choice>
            </attribute>
            <optional>
                <ref name="namespace"/>
            </optional>
            <zeroOrMore>
                <element name="Value">
                    <attribute name="value">
                        <choice> <!-- is order important? -->
                            <data type="dap4_integer"/>
                            <data type="dap4_float"/>
                            <data type="dap4_opaque"/>
                            <data type="dap4_fqn"/> <!-- for enum consts -->
                            <data type="dap4_char"/>
                            <data type="dap4_string"/>
                        </choice>
                    </attribute>
                </element>
            </zeroOrMore>
        </element>
    </define>
    
    <define name="otherxml">
        <element name="OtherXML">
            <ref name="arbitraryxml"/>
        </element>
    </define>
    
    <define name="arbitraryxml">
        <element>
            <anyName/>
            <zeroOrMore>
                <choice>
                    <attribute>
                        <anyName/>
                    </attribute>
                    <text/>
                    <ref name="arbitraryxml"/>
                </choice>
            </zeroOrMore>
        </element>
    </define>
    
</grammar>
